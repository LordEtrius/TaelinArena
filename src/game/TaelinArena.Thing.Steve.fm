import TaelinArena.Game
import TaelinArena.Constants

enum
| STEVE_IDLE
| STEVE_DIAMON_SWORD
| STEVE_TNT
| STEVE_ENDER_PEARL
| STEVE_ENDER_DRAGONS_FURY
| STEVE_BLOCK
| STEVE_TAUNT

steve_fun(self: Thing) : Thing
  let self = self <= thing(mov = 3, mhp = 24)
  let self = update_buff(self, STEVE_BLOCK_TIMER)
  let self = update_buff(self, STEVE_TNT_TIMER)

  case self |thing switch self.act

  | STEVE_IDLE
    if is_walking(self)
    then animate(self, 1, STEVE_WALK_000, 8, 16)
    else animate(self, 1, STEVE_IDLE_000, 1, 2)

  // Left 
  | STEVE_DIAMON_SWORD
    let self = animate(self, 1, STEVE_DIAMOND_SWORD_000, 5, 10)
    let hits = [hit([damage(2)], at_dist(self, 15), self.dir, cbox(12))]
    let self = cast(self, 8, hits)
    self 

  // Middle
  | STEVE_TNT 
    let self = animate_between(self, 1, STEVE_TNT_CASTING_000, 1, 0, 1)
    let self = 
      case is_using_buff(self, STEVE_TNT_TIMER) as on_cooldown
      | true => // Continue on idle
        let self = animate_between(self, 1, STEVE_TNT_CASTING_001, 2, 1, 3)
        let self = reset(self, 3)
        self 

      | false => 
        let self = animate_between(self, 0, STEVE_TNT_CASTING_001, 2, 1, 3)
        let self = reset(self, 3)
        let tnt = new_thing <= thing(fun=steve_tnt_effect, box=nbox)
        let self = end_thing(self, steve_fun, ONE_SEC * 2, STEVE_TNT_TIMER)
        let self = spawn(self, self.tik, [move(tnt, at_max_dist(self, 100))])
        self 
    self 

 // Right
  | STEVE_ENDER_PEARL
    let self = animate_with_blink(self, 0, STEVE_ENDER_PEARL_000, STEVE_IDLE_000, 10, 0, 10)
    let self = blink(self, 10, at_dist(self, 100))
    self

  // Q
  | STEVE_ENDER_DRAGONS_FURY
    let self = animate(self, 0, STEVE_ENDER_DRAGONS_FURY_CASTING_000, 16, 32)
    let effect = new_thing <= thing(
      fun = steve_ender_dragons_fury_effect, 
      dir = targ_dir(self),
      box = nbox
    )
    let head_hits = [
      hit([damage(2), impulse(10, self.dir)], at_dist(self, 24), self.dir, cbox(12)),
      hit([damage(2), impulse(10, self.dir)], at_dist(self, 48), self.dir, cbox(12)),
      hit([damage(2), impulse(10, self.dir)], at_dist(self, 72), self.dir, cbox(12)),
    ] 
    let self = spawn(self, 16, [move(effect, at_dist(self, 150))])
    let self = cast(self, 16, head_hits)
    let self = cast(self, 18, head_hits)
    let self = cast(self, 20, head_hits)
    self

  // Space
  | STEVE_BLOCK 
    let self = animate_between(self, 0, STEVE_BLOCK_CASTING_000, 1, 0, 1)
    let self =
      case is_using_buff(self, STEVE_BLOCK_TIMER) as on_cooldown 
      | true => // Continue on idle
        let self = animate_between(self, 0, STEVE_BLOCK_CASTING_001, 9, 1, 10)
        let self = reset(self, 10)
        self

      | false => // In a minimun of 5 secs, will only be executed once, in a single tik
        let self = animate_between(self, 0, STEVE_BLOCK_CASTING_001, 9, 1, 10)
        let self = reset(self, 10)
        let block_width = 8
        let block_length = 24
        let block = new_thing <= thing(
          fun=steve_block_effect, 
          dir=targ_dir(self),
          box=pbox([ 
            v3(block_width * -1, block_length * -1, 0), 
            v3(block_width * -1, block_length *  1, 0), 
            v3(block_width *  1, block_length *  1, 0), 
            v3(block_width *  1, block_length * -1, 0), 
          ]))
        let self = end_thing(self, steve_fun, ONE_SEC * 5, STEVE_BLOCK_TIMER)
        let self = spawn(self, self.tik, [move(block, at_max_dist(self, 100))])
        self
    self
    


  // E
  | STEVE_TAUNT
    animate(self, 0, STEVE_TAUNT_000, 28, 28)

  else self

steve_tnt_effect(self: Thing) : Thing
  case self |thing 
  let self = animate_die(self, 0, STEVE_TNT_000, 18, 36)
  let hits = [hit([damage(2)], self.pos, self.dir, cbox(30))]
  let self = cast(self, 26, hits)
  self

// !! TODO !! 
// 1) fix model pivot? 
// 2) add push_hits casting
steve_ender_dragons_fury_effect(self: Thing) : Thing
  case self |thing 
  let self = animate_die(self, 0, STEVE_ENDER_DRAGONS_FURY_000, 13, 26)
  let dmg_hits = [
    hit([damage(4)],          v3(0,0,0), self.dir, cbox(12)),
    hit([damage(4)], at_dist(self, 24), self.dir, cbox(12)),
    hit([damage(4)], at_dist(self, 48), self.dir, cbox(12)),
    hit([damage(4)], at_dist(self, 72), self.dir, cbox(12)),
    hit([damage(4)], at_dist(self, 96), self.dir, cbox(12)),
    hit([damage(4)], at_dist(self, 120), self.dir, cbox(12)),
  ] 
  let push_hits = [
    hit([impulse(10, self.dir)], self.pos, self.dir, cbox(12)),
    hit([impulse(10, self.dir)], at_dist(self, 24), self.dir, cbox(12)),
    hit([impulse(10, self.dir)], at_dist(self, 48), self.dir, cbox(12)),
    hit([impulse(10, self.dir)], at_dist(self, 72), self.dir, cbox(12)),
  ]
  let self = cast(self, 1, dmg_hits)
  let self = cast(self, 2, dmg_hits)
  let self = cast(self, 3, dmg_hits)
  let self = cast(self, 4, dmg_hits)
  let self = cast(self, 5, dmg_hits)
  self

steve_block_effect(self: Thing) : Thing
  let self = animate_between(self, 0, STEVE_BLOCK_000, 11,  0, 11)
  let self = animate_between(self, 0, STEVE_BLOCK_010,  7, 59, 66)
  die(self,67)
