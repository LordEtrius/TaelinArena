import TaelinArena.Game
import TaelinArena.Constants

enum
| LINK_IDLE
| LINK_TRIPLE_ATTACK
| LINK_PERFECT_EXTHENGE
| LINK_STORM
| LINK_SELECTION_MASK
| LINK_YOUNG_LINK
| LINK_BLOCK
| LINK_TAUNT


link_fun(self: Thing) : Thing
  let self = self <= thing(mov = 3, mhp = 24)

  case self |thing switch self.act

  | LINK_IDLE
    if is_walking(self)
    then animate(self, 1, LINK_WALK_CYCLE_000, 7, 14)
    else animate(self, 1, LINK_IDLE_000, 7, 14)

  // Left 
  | LINK_TRIPLE_ATTACK
    let self = animate(self, 1, LINK_TRIPLE_ATTACK_000, 11, 22)
    let hits = [hit([damage(DMG_LV_2)], at_dist(self, 20), self.dir, cbox(12))]
    let self = cast(self,  5, hits)
    let self = cast(self, 10, hits)
    let self = cast(self, 18, hits)
    self

  // Middle
  | LINK_PERFECT_EXTHENGE
    let self = animate(self, 0, LINK_PERFECT_EXTHENGE_CASTING_000, 29, 29)
    let arrow = new_thing <= thing(
      sid = self.sid,
      fun = link_perfect_fun,
      vel = scale_v3(10, targ_dir(self)),
      dir = targ_dir(self),
      pos = self.pos)
    let self = spawn(self, 22, [arrow])
    self

  // Right
  | LINK_STORM
    let self = animate(self, 1, LINK_STORM_000, 23, 46)
    let storm_hits = [hit([damage(DMG_LV_1)], self.pos, self.dir, cbox(25))]
    let last_hits  = [hit([damage(DMG_LV_1)], at_dist(self, 20), self.dir, cbox(12))]
    let self = cast(self, 10, storm_hits)
    let self = cast(self, 20, storm_hits)
    let self = cast(self, 30, storm_hits)
    let self = cast(self, 40, last_hits)
    self

  // Q
  | LINK_SELECTION_MASK
    let self =
      if (self.tik > 40) then 
        case self.dir |v3
        if self.dir.x > 0 // looking to the right
        then 
          create_at(self, 41, zora_fun)
        else 
          if self.dir.y > 0 // looking to the left/up
          then create_at(self, 41, goron_fun)
          else create_at(self, 41, deku_fun) // looking to the left/down
      else 
        animate(self, 0, LINK_SELECTION_MASK_000, 23, 46)
    self

  // SPACE
  | LINK_YOUNG_LINK 
    let self = animate(self, 0, LINK_YOUNG_LINK_000, 9, 18)
    let hits = [hit([repulse(-10)], at_dist(self, 60), self.dir, cbox(12))]
    let self = cast(self, 9, hits)
    self 

  // E
  | LINK_BLOCK
    let shield_buff = shielded(22, 1000)
    let self = set_thing_buf(self, cons(_ shield_buff, self.buf))
    let self = animate(self, 1, LINK_BLOCK_000, 11, 22)
    self

  // E
  | LINK_TAUNT
    let self = animate(self, 0, LINK_TAUNT_000, 22, 44)
    self

  

  else self

link_perfect_fun(self: Thing) : Thing
  case self |thing
  let self = animate_die(self, 0, LINK_PERFECT_EXTHENGE_PROJECT_000, 1, 16)
  let self = self <= thing(box = nbox)
  let hits = [hit([damage(DMG_LV_2)], self.pos, self.dir, cbox(6))]
  let self = cast(self, 0, hits)
  let self = cast(self, 1, hits)
  let self = cast(self, 2, hits)
  let self = cast(self, 3, hits)
  let self = cast(self, 4, hits)
  let self = cast(self, 5, hits)
  let self = cast(self, 6, hits)
  let self = cast(self, 7, hits)
  let self = cast(self, 8, hits)
  let self = cast(self, 9, hits)
  let self = cast(self, 10, hits)
  let self = cast(self, 11, hits)
  let self = cast(self, 12, hits)
  let self = cast(self, 13, hits)
  let self = cast(self, 14, hits)
  let self = cast(self, 15, hits)
  self


// Zora transformation
// ------------------
enum
| ZORA_IDLE
| ZORA_DASH

zora_fun(self: Thing) : Thing
  let self = self <= thing(mov = 4)
  let self = end_thing(self, link_fun, ONE_SEC * 7, ULT_TIME)

  case self |thing switch self.act

  | ZORA_IDLE
    if is_walking(self)
    then animate(self, 1, ZORA_RUN_000, 5, 10)
    else animate(self, 1, ZORA_IDLE_000, 5, 10)

  // Left
  // After using the skill 1x, he turns back to Link
  | ZORA_DASH
    let self = animate_with_blink(self, 1, ZORA_SKILL_000, ZORA_IDLE_000, 4, 0, 16)
    let self = blink(self, 16, at_dist(self, 75))
    let hits1 = [hit([damage(DMG_LV_2)], at_dist(self, 25), self.dir, cbox(12))]
    let hits2 = [hit([damage(DMG_LV_2)], at_dist(self, 50), self.dir, cbox(12))]
    let hits3 = [hit([damage(DMG_LV_2)], at_dist(self, 75), self.dir, cbox(12))]
    let self = cast(self, 4, hits1)
    let self = cast(self, 8, hits2)
    let self = cast(self, 12, hits3)
    let self = create_at(self, 16, link_fun)
    self

  else animate(self, 1, ZORA_IDLE_000, 5, 10)

// Deku transformation
// -------------------
enum
| DEKU_IDLE
| DEKU_MUSIC

deku_fun(self: Thing) : Thing
  let self = self <= thing(mov = 3)

  let self = end_thing(self, link_fun, ONE_SEC * 7, ULT_TIME)

  case self |thing switch self.act

  | DEKU_IDLE
    if is_walking(self)
    then animate(self, 1, DEKU_RUN_000, 4, 16)
    else animate(self, 1, DEKU_IDLE_000, 6, 12)

  // Left
  // After using the skill 1x, he turns back to Link
  | DEKU_MUSIC
    let self  = animate(self, 1, DEKU_SKILL_000, 19, 38)
    let box   = pbox([ v3(0,0,0), v3(70,45,0), v3(70,-45,0) ]) 
    let hits  = [hit([damage(DMG_LV_2)], self.pos, self.dir, box)]
    let self  = cast(self, 10, hits)
    let self  = cast(self, 15, hits)
    let self  = cast(self, 20, hits)
    let self  = cast(self, 25, hits)
    let self  = cast(self, 30, hits)
    let self  = create_at(self, 37, link_fun)
    self
    
  else animate(self, 1, DEKU_IDLE_000, 6, 12)

// Goron transformation
// -------------------
enum
| GORON_IDLE
| GORON_JUMP

goron_fun(self: Thing) : Thing
  let self = self <= thing(mov = 4)

  let self = end_thing(self, link_fun, ONE_SEC * 5, ULT_TIME)

  case self |thing switch self.act

  | GORON_IDLE
    if is_walking(self)
    then animate(self, 1, GORON_RUN_000, 4, 16)
    else animate(self, 1, GORON_IDLE_000, 5, 10)
  
  // After using the skill 1x, he turns back to Link
  | GORON_JUMP
    let self  = animate_with_blink(self, 1, GORON_SKILL_000, LINK_IDLE_000, 18, 0, 36)
    let self = blink(self, 16, at_dist(self,30))
    let self = blink(self, 31, at_dist(self,5))
    let pos1 = at_dist(self, 20)
    let pos2 = at_dist(self, 50)
    let hits1 = [hit([damage(DMG_LV_3)], pos1, self.dir, cbox(15))]
    let hits2 = [hit([damage(DMG_LV_6)], pos2, self.dir, cbox(15))]
    let self  = cast(self, 15, hits1)
    let self  = cast(self, 30, hits2)
    let self  = create_at(self, 36, link_fun)
    self

  else animate(self, 1, GORON_IDLE_000, 5, 10)
